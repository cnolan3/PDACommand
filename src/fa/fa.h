/**
 * @file    fa.h
 *
 * @brief   non-deterministic finite automaton to be generated by regular expressions
 *          and used for lexical analysis of a document.
 *
 * @author  Connor Nolan
**/

#ifndef __FA_H__
#define __FA_H__

#include <vector>
#include <list>
#include <istream>
#include <utility>
#include "fa_trans_table.h"
#include "fa_alpha.h"
#include "../util/constants.h"
#include "../util/tokens.h"

using std::vector;
using std::pair;
using std::string;

class FA
{
public:
    FA(const FAtTable& table, FAAlpha& alpha);

    std::list<token> run(std::istream& input);
private:

    struct alphaChar
    {
        char id;
        void* (*action)(string text);
    };

    token step(std::istream& input, int state, std::string s);

    int m_numStates;
    alphaChar* m_tokenTable;
    FAtTable m_tTable;
};

#endif
